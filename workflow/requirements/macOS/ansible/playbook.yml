---
- hosts: all

  connection: local

  vars_files:
    - packages.yml

  roles:

    - role: geerlingguy.homebrew
      homebrew_upgrade_all_packages: yes
      homebrew_cask_accept_external_apps: true
      tags: ['tools']
      ignore_errors: yes

  tasks:

    - name: Install global Composer packages.
      composer:
        command: "{{ (item.state | default('present') == 'absent') | ternary('remove', 'require') }}"
        arguments: "{{ item.name | default(item) }} {{ item.version | default('@stable') }}"
        # Ansible 2.4 supports `global_command` making `working_dir` optional.
        working_dir: "{{ lookup('env', 'COMPOSER_HOME') | default('~/.composer', true) }}"
      with_items: "{{ composer_packages }}"

    - name: Install global NPM packages.
      npm:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        global: yes
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ npm_packages }}"


    - name: Install global Ruby gems.
      gem:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        user_install: no
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ gem_packages }}"

    - name: Install global Pip packages.
      pip:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ pip_packages }}"

    - name: Install pear packages.
      pear:
        name: "{{ item.name | default(item) }}"
        state: "{{ item.state | default('present') }}"
        version: "{{ item.version | default(omit) }}"
        executable: "{{ item.executable | default(omit) }}"
      with_items: "{{ pear_packages }}"

    - name: Install cargo packages.
      shell: "cargo install {{ item.name }}"
      with_items: "{{ cargo_packages }}"
      ignore_errors: yes

    - name: Download executables.
      get_url:
        url: "{{ item.url }}"
        dest: "{{ item.dest }}"
      with_items: "{{ download_executables }}"

    - name: Permissions for downloaded executables.
      file:
        path: "{{ item.dest }}"
        state: file
        mode: 755
      with_items: "{{ download_executables }}"
